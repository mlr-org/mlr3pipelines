% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpUMAP.R
\name{mlr_pipeops_umap}
\alias{mlr_pipeops_umap}
\alias{PipeOpUMAP}
\title{Uniform Manifold Approximation and Projection (UMAP)}
\format{
\code{\link{R6Class}} object inheriting from \code{\link{PipeOpTaskPreproc}}/\code{\link{PipeOp}}.
}
\description{
Carry out dimensionality reduction of a dataset using the Uniform Manifold Approximation and Projection (UMAP).
See \code{\link[uwot:umap2]{uwot::umap2()}} for details.
}
\section{Construction}{


\if{html}{\out{<div class="sourceCode">}}\preformatted{PipeOpUMAP$new(id = "umap", param_vals = list())
}\if{html}{\out{</div>}}
\itemize{
\item \code{id} :: \code{character(1)}\cr
Identifier of resulting object, default \code{"umap"}.
\item \code{param_vals} :: named \code{list}\cr
List of hyperparameter settings, overwriting the hyperparameter settings that would otherwise be set during construction. Default \code{list()}.
}
}

\section{Input and Output Channels}{

Input and output channels are inherited from \code{\link{PipeOpTaskPreproc}}.

The output is the input \code{\link[mlr3:Task]{Task}} with all affected numeric features replaced by their principal components.
}

\section{State}{

The \verb{$state} is a named \code{list} with the \verb{$state} elements inherited from \code{\link{PipeOpTaskPreproc}}, as well as the elements of the list
returned from \link[uwot:umap2]{uwot::umap2}.
These are in particular:
\itemize{
\item \code{embedding} :: \code{matrix}\cr
Matrix of embedded coordinates.
\item \code{scale_info} :: named \code{list()}\cr
If \code{scale}is \code{TRUE}, this gives the scaling attributes (\code{center}, \code{scale}, \code{nzvcols}) of the scaled data.
\item \code{search_k} :: \code{numeric(1)}\cr
Number of nodes searched during the neighbor retrieval. Only used if the \code{nn_method} is \code{"annoy"}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{local_connectivity} :: \code{numeric(1)}\cr
Used local connectivity – i.e. the number of nearest neighbors that should be
assumed to be connected at a local level. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{n_epochs} :: \code{numeric(1)}\cr
Number of epochs used during the optimization of the embedded coordinates. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{alpha} :: \code{numeric(1)}\cr
Initial learning rate. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{negative_sample_rate} :: \code{numeric(1)}\cr
The number of negative edge/1-simplex samples used per positive edge/1-simplex sample
in optimizing the low dimensional embedding. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{method} :: \code{character(1)}\cr
General method used for dimensionality reduction, is always \code{"umap"} for this PipeOp.
\item \code{a} :: named \code{numeric(1)}\cr
More specific parameters controlling the embedding. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{b} :: named \code{numeric(1)}\cr
More specific parameters controlling the embedding. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{gamma} :: \code{numeric(1)}\cr
Repulsion strength. Weighting applied to negative samples in low dimensional embedding optimization.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{approx_pow} :: \code{logical(1)}\cr
If \code{TRUE}, use an approximation to the power function in the UMAP gradient. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{metric} :: named \code{list()}\cr
Type of distance metric used to find nearest neighbors. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{norig_col} :: \code{integer(1)}\cr
Number of original columns.
\item \code{pcg_rand} :: \code{logical(1)}\cr
\code{TRUE}, if the PCG random number generator (O'Neill, 2014) was used during optimization.
Otherwise, Tausworthe "taus88" generator was used. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{batch} :: \code{logical(1)}\cr
\code{TRUE}, if embedding coordinates were updated at the end of each epoch rather
than during the epoch. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{opt_args} :: named \code{list()}\cr
Optimizer parameters, used when \code{batch = TRUE}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{num_precomputed_nns} :: \code{numeric(1)}\cr
Number of precomputed nearest neighbors, via \code{nn_method}.
\item \code{min_dist} :: \code{numeric(1)}\cr
The effective minimum distance between embedded points. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{spread} :: \code{numeric(1)}\cr
The effective scale of embedded points. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{binary_edge_weights} :: \code{logical(1)}\cr
If \code{TRUE} then edge weights in the input graph were treated as binary (0/1) rather than real valued.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{seed} :: \code{integer(1)}\cr
Integer seed to use to initialize the random number generator state. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{nn_method} :: \code{any}\cr
Method for finding nearest neighbors. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{nn_args} :: \code{list()}\cr
A list containing additional arguments to pass to the nearest neighbor method. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{n_neighbors} :: \code{numeric(1)}\cr
The size of the neighborhood used for manifold approximation. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{nn_index} :: named \code{list()}\cr
Nearest neighbor index that can be used for transformation of new data points.
\item \code{pca_models} :: \code{list()}\cr
Used PCA models for initialization, \code{pca} is specified. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
}
}

\section{Parameters}{

The parameters are the parameters inherited from \code{\link{PipeOpTaskPreproc}}, as well as:
\itemize{
\item \code{n_neighbors} :: \code{integer(1)}\cr
The size of the neighborhood used for manifold approximation. Default is \code{15}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{n_components} :: \code{integer(1)}\cr
The dimension of the space to embed into. Default is \code{2}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{metric} :: \code{character(1)}\cr
Type of distance metric to use to find nearest neighbors. Default is \code{"euclidean"}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{n_epochs} :: \code{integer(1)}\cr
Number of epochs to use during the optimization of the embedded coordinates. Default is \code{NULL}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{learning_rate} :: \code{numeric(1)}\cr
Initial learning rate used in optimization of the coordinates. Default is \code{1}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{scale} :: \code{logical(1)} / \code{character(1)}\cr
Scaling to apply to the data. If \code{TRUE}, data is standardized. Default is \code{FALSE}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{init} :: \code{character(1)}\cr
Type of initialization for the coordinates. May be set to \code{"custom"}, in which case the \code{matrix} of initial
coordinates passed to \code{init_custom} is used. Default is \code{"spectral"}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{init_custom} :: \code{matrix}\cr
Matrix of initial coordinates. Only used, if \code{init} is \code{"custom"}.
\item \code{init_sdev} :: \code{character(1)} | \code{numeric(1)}\cr
Scales each dimension of the initialized coordinates to this standard deviation.
Default is \code{"range"}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{spread} :: \code{numeric(1)}\cr
The effective scale of embedded points. Default is \code{1}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{min_dist} :: \code{numeric(1)}\cr
The effective minimum distance between embedded points. Default is \code{0.01}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{set_op_mix_ratio} :: \code{numeric(1)}\cr
Interpolate between (fuzzy) union and intersection as the set operation used to
combine local fuzzy simplicial sets to obtain a global fuzzy simplicial sets. Default is \code{1}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{local_connectivity} :: \code{numeric(1)}\cr
The local connectivity required – i.e. the number of nearest neighbors that should be
assumed to be connected at a local level. Default is \code{1}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{bandwidth} :: \code{numeric(1)}\cr
The effective bandwidth of the kernel if we view the algorithm as similar to Laplacian Eigenmaps.
Default is \code{1}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{repulsion_strength} :: \code{numeric(1)}\cr
Weighting applied to negative samples in low dimensional embedding optimization.
Default is \code{1}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{negative_sample_rate} :: \code{numeric(1)}\cr
The number of negative edge/1-simplex samples to use per positive edge/1-simplex sample
in optimizing the low dimensional embedding. Default is \code{5}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{a} :: \code{numeric(1)}\cr
More specific parameters controlling the embedding. Default is \code{NULL}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{b} :: \code{numeric(1)}\cr
More specific parameters controlling the embedding. Default is \code{NULL}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{nn_method} :: \code{character(1)}\cr
Method for finding nearest neighbors. Note that only values compatible with \code{\link[uwot:umap_transform]{uwot::umap_transform()}} are allowed.
Default is \code{NULL}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{n_trees} :: \code{integer(1)}\cr
Number of trees to build when constructing the nearest neighbor index. Default is \code{50}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{search_k} :: \code{integer(1)}\cr
Number of nodes to search during the neighbor retrieval. Only used if the \code{nn_method} is \code{"annoy"}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{approx_pow} :: \code{logical(1)}\cr
If \code{TRUE}, use an approximation to the power function in the UMAP gradient. Default is \code{FALSE}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\code{use_supervised} :: \code{logical(1)}\cr
If \code{TRUE}, perform supervised dimension reduction. This is done by passing the task's target to \code{\link[uwot:umap2]{uwot::umap2()}}'s \code{y} argument.
For details, see there. Initialized to \code{FALSE}.
\item \code{target_n_neighbors} :: \code{integer(1)}\cr
Number of nearest neighbors to use to construct the target simplicial set. Only used when performing supervised dimension reduction.
Default is \code{n_neighbors}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{target_metric} :: \code{character(1)}\cr
The metric used to measure distance for the task's target when performing supervised dimension reduction.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{target_weight} :: \code{numeric(1)}\cr
Weighting factor between data topology and target topology. Only used when performing supervised dimension reduction.
Default is \code{0.5}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{pca} :: \code{integer(1)}\cr
Reduce data to this number of columns using PCA. Default is \code{NULL}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{pca_center} :: \code{logical(1)}\cr
If \code{TRUE}, center the columns of X before carrying out PCA. Default is \code{TRUE}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{pcg_rand} :: \code{logical(1)}\cr
If \code{TRUE}, use the PCG random number generator (O'Neill, 2014) during optimization.
Otherwise, use the faster (but probably less statistically good) Tausworthe "taus88" generator.
Default is \code{TRUE}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{fast_sgd} :: \code{logical(1)}\cr
If \code{TRUE}, then the following combination of parameters is set:
\itemize{
\item \code{pcg_rand = TRUE}
\item \code{n_sgd_threads = "auto"}
\item \code{approx_pow = TRUE}
Default is \code{FALSE}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
}
\item \code{n_threads} :: \code{integer(1)}\cr
Number of threads to use. Default is \code{NULL}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{n_sgd_threads} :: \code{integer(1)}\cr
Number of threads to use during stochastic gradient descent. Default is \code{0}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{grain_size} :: \code{integer(1)}\cr
The minimum amount of work to do on each thread. Default is \code{1}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{verbose} :: \code{logical(1)}\cr
Should details be printed? Initialized to \code{FALSE}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{batch} :: \code{logical(1)}\cr
If \code{TRUE}, then embedding coordinates are updated at the end of each epoch rather
than during the epoch. Default is \code{TRUE}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{opt_args} :: named \code{list()}\cr
A list of optimizer parameters, used when \code{batch = TRUE}. Default is \code{NULL}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{epoch_callback} :: \code{function}\cr
A function which will be invoked at the end of every epoch. Default is \code{NULL}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{pca_method} :: \code{character(1)}\cr
Method to carry out any PCA dimensionality reduction when the \code{pca} is specified.
Default is \code{NULL}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{binary_edge_weights} :: \code{logical(1)}\cr
If \code{TRUE} then edge weights in the input graph are treated as binary (0/1) rather than real valued.
Default is \code{FALSE}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{dens_scale} :: \code{numeric(1)}\cr
A scaling factor to apply to the density of the input data. Default is \code{NULL}.
For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{seed} :: \code{integer(1)}\cr
Integer seed to use to initialize the random number generator state.
Default is \code{NULL}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
\item \code{nn_args} :: named \code{list()}\cr
A list containing additional arguments to pass to the nearest neighbor method.
Default is \code{NULL}. For details, see \code{\link[uwot:umap2]{uwot::umap2()}}.
}

Additionally, there are several parameters that may be used to overwrite parameter values for prediction:
\itemize{
\item \code{search_k_transform} :: \code{integer(1)}\cr
Number of nodes to search during the neighbor retrieval when predicting.
Only used if \code{nn_method} is \code{"annoy"}. If \code{NULL}, \code{search_k} is used instead. Default is \code{NULL}. For details, see \code{\link[uwot:umap_transform]{uwot::umap_transform()}}.
\item \code{n_epochs_transform} :: \code{integer(1)}\cr
Number of epochs used during the optimization of the embedded coordinates when predicting.
If \code{NULL}, \code{n_epochs} is used instead. Default is \code{NULL}. For details, see \code{\link[uwot:umap_transform]{uwot::umap_transform()}}.
\item \code{init_transform} :: \code{character(1)}\cr
Type of initialization for the coordinates when predicting. May be set to \code{"custom"}, in which case the \code{matrix} of initial
coordinates passed to \code{init_transform_custom} is used. Default is \code{"weighted"}. For details, see \code{\link[uwot:umap_transform]{uwot::umap_transform()}}.
\item \code{init_transform_custom} :: \code{matrix}\cr
Matrix of initial coordinates when predicting Only used, if \code{init_transform} is \code{"custom"}.
\item \code{batch_transform} :: \code{logical(1)}\cr
If \code{TRUE}, embedding coordinates are updated at the end of each epoch rather than during the epoch when predicting.
If \code{NULL}, \code{batch} is used instead. Default is \code{FALSE}. For details, see \code{\link[uwot:umap_transform]{uwot::umap_transform()}}.
\item \code{learning_rate_transform} :: \code{numeric(1)}\cr
Initial learning rate used in optimization of the coordinates when predicting.
If \code{NULL}, \code{learning_rate} is used instead. Default is \code{NULL}. For details, see \code{\link[uwot:umap_transform]{uwot::umap_transform()}}.
\item \code{epoch_callback_transform} :: \code{function}\cr
A function which will be invoked at the end of every epoch when predicting.
Default is \code{NULL}. For details, see \code{\link[uwot:umap_transform]{uwot::umap_transform()}}.
}
}

\section{Internals}{

Uses the \link[uwot:umap2]{umap2()} function.
}

\section{Methods}{

Only methods inherited from \code{\link{PipeOpTaskPreproc}}/\code{\link{PipeOp}}.
}

\examples{
\dontshow{ if (requireNamespace("uwot")) \{ }
library("mlr3")

task = tsk("iris")
pop = po("umap")

task$data()
pop$train(list(task))[[1]]$data()

pop$state
\dontshow{ \} }
}
\references{
McInnes L, Healy J, Melville J, Grossberger L (2018).
\dQuote{UMAP: Uniform Manifold Approximation and Projection for Dimension Reduction.}
\emph{Journal of Open Source Software}, \bold{3}(29).
\doi{10.21105/joss.00861}.
}
\seealso{
https://mlr-org.com/pipeops.html

Other PipeOps: 
\code{\link{PipeOp}},
\code{\link{PipeOpEnsemble}},
\code{\link{PipeOpImpute}},
\code{\link{PipeOpTargetTrafo}},
\code{\link{PipeOpTaskPreproc}},
\code{\link{PipeOpTaskPreprocSimple}},
\code{\link{mlr_pipeops}},
\code{\link{mlr_pipeops_boxcox}},
\code{\link{mlr_pipeops_branch}},
\code{\link{mlr_pipeops_chunk}},
\code{\link{mlr_pipeops_classbalancing}},
\code{\link{mlr_pipeops_classifavg}},
\code{\link{mlr_pipeops_classweights}},
\code{\link{mlr_pipeops_colapply}},
\code{\link{mlr_pipeops_collapsefactors}},
\code{\link{mlr_pipeops_colroles}},
\code{\link{mlr_pipeops_copy}},
\code{\link{mlr_pipeops_datefeatures}},
\code{\link{mlr_pipeops_encode}},
\code{\link{mlr_pipeops_encodeimpact}},
\code{\link{mlr_pipeops_encodelmer}},
\code{\link{mlr_pipeops_featureunion}},
\code{\link{mlr_pipeops_filter}},
\code{\link{mlr_pipeops_fixfactors}},
\code{\link{mlr_pipeops_histbin}},
\code{\link{mlr_pipeops_ica}},
\code{\link{mlr_pipeops_imputeconstant}},
\code{\link{mlr_pipeops_imputehist}},
\code{\link{mlr_pipeops_imputelearner}},
\code{\link{mlr_pipeops_imputemean}},
\code{\link{mlr_pipeops_imputemedian}},
\code{\link{mlr_pipeops_imputemode}},
\code{\link{mlr_pipeops_imputeoor}},
\code{\link{mlr_pipeops_imputesample}},
\code{\link{mlr_pipeops_kernelpca}},
\code{\link{mlr_pipeops_learner}},
\code{\link{mlr_pipeops_missind}},
\code{\link{mlr_pipeops_modelmatrix}},
\code{\link{mlr_pipeops_multiplicityexply}},
\code{\link{mlr_pipeops_multiplicityimply}},
\code{\link{mlr_pipeops_mutate}},
\code{\link{mlr_pipeops_nmf}},
\code{\link{mlr_pipeops_nop}},
\code{\link{mlr_pipeops_ovrsplit}},
\code{\link{mlr_pipeops_ovrunite}},
\code{\link{mlr_pipeops_pca}},
\code{\link{mlr_pipeops_proxy}},
\code{\link{mlr_pipeops_quantilebin}},
\code{\link{mlr_pipeops_randomprojection}},
\code{\link{mlr_pipeops_randomresponse}},
\code{\link{mlr_pipeops_regravg}},
\code{\link{mlr_pipeops_removeconstants}},
\code{\link{mlr_pipeops_renamecolumns}},
\code{\link{mlr_pipeops_replicate}},
\code{\link{mlr_pipeops_rowapply}},
\code{\link{mlr_pipeops_scale}},
\code{\link{mlr_pipeops_scalemaxabs}},
\code{\link{mlr_pipeops_scalerange}},
\code{\link{mlr_pipeops_select}},
\code{\link{mlr_pipeops_smote}},
\code{\link{mlr_pipeops_spatialsign}},
\code{\link{mlr_pipeops_subsample}},
\code{\link{mlr_pipeops_targetinvert}},
\code{\link{mlr_pipeops_targetmutate}},
\code{\link{mlr_pipeops_targettrafoscalerange}},
\code{\link{mlr_pipeops_textvectorizer}},
\code{\link{mlr_pipeops_threshold}},
\code{\link{mlr_pipeops_tunethreshold}},
\code{\link{mlr_pipeops_unbranch}},
\code{\link{mlr_pipeops_updatetarget}},
\code{\link{mlr_pipeops_vtreat}},
\code{\link{mlr_pipeops_yeojohnson}}
}
\concept{PipeOps}
