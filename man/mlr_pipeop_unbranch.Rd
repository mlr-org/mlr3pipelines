% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpUnBranch.R
\docType{data}
\name{mlr_pipeop_unbranch}
\alias{mlr_pipeop_unbranch}
\alias{PipeOpUnbranch}
\title{PipeOpUnbranch}
\format{\code{\link{R6Class}} object inheriting from \code{\link{PipeOp}}.}
\usage{
PipeOpUnbranch
}
\description{
Used to bring together different paths created by \code{\link{PipeOpBranch}}.
}
\section{Methods}{

\itemize{
\item \code{PipeOpUnbranch$new(options = 0, id = "unbranch")} \cr
(\code{numeric(1)} | \code{character}, \code{character(1)}) -> \code{self} \cr
Constructor. If \code{options} is 0, only one vararg input channel is created that can
be connected to an arbitrary number of branches. If \code{options} is a positive integer
number, it determines the number of input channels that are created, named
\code{input1}...\code{input<n>}. If \code{options} is a \code{character}, it determines the names of channels directly.
}
}

\section{Details}{

Creates a PipeOp with multiple input channels that can be used to
create a Graph network with alternative paths. \code{options} works as in \code{\link{PipeOpBranch}}
and should probably be the same value as the \code{options} given to the corresponding
\code{\link{PipeOpBranch}} instance.
}

\examples{
pca = PipeOpPCA$new()
nop = PipeOpNOP$new()
choices = c("pca", "nothing")
PipeOpBranch$new(choices) \%>>\% gunion(list(pca, nop)) \%>>\% PipeOpUnbranch$new(choices)
}
\seealso{
Other PipeOps: \code{\link{PipeOpEnsemble}},
  \code{\link{PipeOpTaskPreproc}}, \code{\link{PipeOp}},
  \code{\link{mlr_pipeop_apply}},
  \code{\link{mlr_pipeop_backup_learner}},
  \code{\link{mlr_pipeop_balancesample}},
  \code{\link{mlr_pipeop_branch}},
  \code{\link{mlr_pipeop_chunk}},
  \code{\link{mlr_pipeop_copy}},
  \code{\link{mlr_pipeop_encode}},
  \code{\link{mlr_pipeop_featureunion}},
  \code{\link{mlr_pipeop_filter}},
  \code{\link{mlr_pipeop_impute}},
  \code{\link{mlr_pipeop_learner}},
  \code{\link{mlr_pipeop_majorityvote}},
  \code{\link{mlr_pipeop_modelavg}},
  \code{\link{mlr_pipeop_mutate}},
  \code{\link{mlr_pipeop_nop}},
  \code{\link{mlr_pipeop_pca}},
  \code{\link{mlr_pipeop_scale}},
  \code{\link{mlr_pipeop_select}},
  \code{\link{mlr_pipeop_subsample}},
  \code{\link{mlr_pipeops}}

Other Path Branching: \code{\link{NO_OP}},
  \code{\link{filter_noop}}, \code{\link{is_noop}},
  \code{\link{mlr_pipeop_branch}}
}
\concept{Path Branching}
\concept{PipeOps}
\keyword{datasets}
