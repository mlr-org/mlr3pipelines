% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpApply.R
\docType{data}
\name{mlr_pipeop_apply}
\alias{mlr_pipeop_apply}
\alias{PipeOpApply}
\title{PipeOpApply}
\format{\code{\link{R6Class}} object inheriting from \code{\link{PipeOpTaskPreprocSimple}}.}
\usage{
PipeOpApply
}
\description{
Applies a function to each element of a task. Only one of \code{applicator}
or \code{applicator_single} may be non-\code{NULL}.
}
\section{Parameter Set}{

\itemize{
\item \code{applicator_vector} :: \code{function} \cr
Function to apply to each column of the task. The return value must have the
same length as the input, i.e. vectorize over the input. A typical example would be \code{as.numeric}.
\item \code{applicator_single} :: \code{function} \cr
Function to apply to each data element of the task; does not need to vectorize
(although a vectorizing function gives better performance when given to \code{applicator}).
Note that vectorizing functions should be used as \code{applicator} instead for greater
performance.
}
}

\seealso{
Other PipeOps: \code{\link{PipeOpEnsemble}},
  \code{\link{PipeOpTaskPreproc}}, \code{\link{PipeOp}},
  \code{\link{mlr_pipeop_backup_learner}},
  \code{\link{mlr_pipeop_balancesample}},
  \code{\link{mlr_pipeop_branch}},
  \code{\link{mlr_pipeop_chunk}},
  \code{\link{mlr_pipeop_copy}},
  \code{\link{mlr_pipeop_encode}},
  \code{\link{mlr_pipeop_featureunion}},
  \code{\link{mlr_pipeop_filter}},
  \code{\link{mlr_pipeop_impute}},
  \code{\link{mlr_pipeop_learner}},
  \code{\link{mlr_pipeop_majorityvote}},
  \code{\link{mlr_pipeop_modelavg}},
  \code{\link{mlr_pipeop_mutate}},
  \code{\link{mlr_pipeop_nop}},
  \code{\link{mlr_pipeop_pca}},
  \code{\link{mlr_pipeop_scale}},
  \code{\link{mlr_pipeop_select}},
  \code{\link{mlr_pipeop_subsample}},
  \code{\link{mlr_pipeop_unbranch}},
  \code{\link{mlr_pipeops}}
}
\concept{PipeOps}
\keyword{datasets}
